name: Rust

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: read

jobs:
  build_unix:
    name: Build for ${{ matrix.os }}

    strategy:
      matrix:
        # Build for Windows as well to ensure the crate doesn't cause any build issues on non-Unix platforms.
        os: [ubuntu-latest, macOS-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - uses: clechasseur/rs-clippy-check@69da786488ddcceb16285b0219841750089369ba # v5.0.1
        with:
          args: --all-targets --all-features

      - name: Build
        run: cargo build --all-targets --all-features --verbose

  test_ubuntu:
    name: Test on Ubuntu

    runs-on: ubuntu-latest

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Run tests
        run: |
          sudo useradd daemonize-test
          CARGO_BIN=$(which cargo)
          sudo -E $CARGO_BIN test --all-features --verbose

  test_macos:
    name: Test on macOS

    runs-on: macOS-latest

    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Run tests
        run: |
          sudo sysadminctl -addUser daemonize-test
          sudo dseditgroup -o create daemonize-test
          CARGO_BIN=$(which cargo)
          sudo -E $CARGO_BIN test --all-features --verbose
